name: Maven Build & Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  Build-Deploy:
    runs-on: self-hosted

    steps:
      # Checkout code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Build with Maven
      - name: Build with Maven
        run: mvn -B clean verify install

      # # Run SonarQube analysis
      # - name: SonarQube Scan
      #   run: |
      #     sonar-scanner `
      #   #    "-Dsonar.projectKey=weather-app" `
      #   #    "-Dsonar.host.url=http://localhost:9000" `
      #   #    "-Dsonar.login=$SONAR_TOKEN"
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   shell: powershell
        
      # # Upload artifact to Nexus
      # - name: Deploy to Nexus
      #   env:
      #     NEXUS_USER: ${{ secrets.NEXUS_USER }}
      #     NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
      #   run: |
      #     $VERSION = "1.1.${{ github.run_number }}"
      #     Write-Host "Deploying version $VERSION"
      
      #     # Use double quotes for proper expansion
      #     mvn deploy:deploy-file `
      #       "-DgroupId=com.example" `
      #       "-DartifactId=weather-app-1.1" `
      #       "-Dversion=$VERSION" `
      #       "-Dpackaging=war" `
      #       "-Dfile=target/weather-app.war" `
      #       "-DrepositoryId=maven-release-repo-weather-app" `
      #       "-Durl=http://localhost:8899/repository/maven-release-repo-weather-app/" `
      #       "-Dusername=$env:NEXUS_USER" `
      #       "-Dpassword=$env:NEXUS_PASS"
      #   shell: powershell
        
      # # (Optional) Deploy to Tomcat if reachable
      # - name: Deploy WAR to Tomcat
      #   env:
      #     NEXUS_USER: ${{ secrets.NEXUS_USER }}
      #     NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
      #     TOMCAT_USER: ${{ secrets.TOMCAT_USER }}
      #     TOMCAT_PASS: ${{ secrets.TOMCAT_PASS }}
      #   run: |
      #     $VERSION = "1.1.${{ github.run_number }}"
      #     Write-Host "Downloading version $VERSION"

      #     # Correct Nexus artifact URL for artifactId weather-app-1.1
      #     $ARTIFACT_URL = "http://localhost:8899/repository/maven-release-repo-weather-app/com/example/weather-app-1.1/$VERSION/weather-app-1.1-$VERSION.war"
      #     Write-Host "Downloading from Nexus: $ARTIFACT_URL"

      #     # Create Nexus credential
      #     $securePassword = ConvertTo-SecureString $env:NEXUS_PASS -AsPlainText -Force
      #     $cred = New-Object System.Management.Automation.PSCredential($env:NEXUS_USER, $securePassword)

      #     # Download the WAR
      #     Invoke-WebRequest -Uri $ARTIFACT_URL -OutFile "weather-app-1.1-$VERSION.war" -Credential $cred

      #     # Deploy WAR to Tomcat
      #     Write-Host "Deploying to Tomcat..."
      #     $tomcatCred = New-Object System.Management.Automation.PSCredential($env:TOMCAT_USER, (ConvertTo-SecureString $env:TOMCAT_PASS -AsPlainText -Force))
      #     Invoke-WebRequest -Uri "http://localhost:5556/manager/text/deploy?path=/weather-app&update=true" -Method Put -InFile "weather-app-1.1-$VERSION.war" -Credential $tomcatCred
      #   shell: powershell

      # (Optional) Deploy to JFrog
      - name: Upload WAR to JFrog
        shell: powershell
        run: |
          $VERSION="1.2"
          Write-Host "Uploading weather-app-$VERSION.war to JFrog"
      
          if ($env:DEPLOY_TYPE -eq "snapshot") {
              $REPO="libs-snapshot-local"
          } else {
              $REPO="libs-release-local"
          }
      
          # Maven-style path: groupId=com.example, artifactId=weather-app
          $GROUP_PATH="com/example/weather-app"
          $ARTIFACT_PATH="$GROUP_PATH/$VERSION/weather-app-$VERSION.war"
          $URL="http://localhost:8082/artifactory/$REPO/$ARTIFACT_PATH"
      
          # Rename WAR to match
          Copy-Item "target/weather-app.war" "target/weather-app-$VERSION.war"
      
          Write-Host "Uploading to $URL"
          curl.exe -u "$env:JFROG_USER:$env:JFROG_PASS" -T "target/weather-app-$VERSION.war" "$URL" --progress-bar


